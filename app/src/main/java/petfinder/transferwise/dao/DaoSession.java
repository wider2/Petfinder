package petfinder.transferwise.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import petfinder.transferwise.dao.Catalogue;
import petfinder.transferwise.dao.Pet;
import petfinder.transferwise.dao.Pet_Media;
import petfinder.transferwise.dao.Pet_Contact;
import petfinder.transferwise.dao.Pet_Breed;

import petfinder.transferwise.dao.CatalogueDao;
import petfinder.transferwise.dao.PetDao;
import petfinder.transferwise.dao.Pet_MediaDao;
import petfinder.transferwise.dao.Pet_ContactDao;
import petfinder.transferwise.dao.Pet_BreedDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig catalogueDaoConfig;
    private final DaoConfig petDaoConfig;
    private final DaoConfig pet_MediaDaoConfig;
    private final DaoConfig pet_ContactDaoConfig;
    private final DaoConfig pet_BreedDaoConfig;

    private final CatalogueDao catalogueDao;
    private final PetDao petDao;
    private final Pet_MediaDao pet_MediaDao;
    private final Pet_ContactDao pet_ContactDao;
    private final Pet_BreedDao pet_BreedDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        catalogueDaoConfig = daoConfigMap.get(CatalogueDao.class).clone();
        catalogueDaoConfig.initIdentityScope(type);

        petDaoConfig = daoConfigMap.get(PetDao.class).clone();
        petDaoConfig.initIdentityScope(type);

        pet_MediaDaoConfig = daoConfigMap.get(Pet_MediaDao.class).clone();
        pet_MediaDaoConfig.initIdentityScope(type);

        pet_ContactDaoConfig = daoConfigMap.get(Pet_ContactDao.class).clone();
        pet_ContactDaoConfig.initIdentityScope(type);

        pet_BreedDaoConfig = daoConfigMap.get(Pet_BreedDao.class).clone();
        pet_BreedDaoConfig.initIdentityScope(type);

        catalogueDao = new CatalogueDao(catalogueDaoConfig, this);
        petDao = new PetDao(petDaoConfig, this);
        pet_MediaDao = new Pet_MediaDao(pet_MediaDaoConfig, this);
        pet_ContactDao = new Pet_ContactDao(pet_ContactDaoConfig, this);
        pet_BreedDao = new Pet_BreedDao(pet_BreedDaoConfig, this);

        registerDao(Catalogue.class, catalogueDao);
        registerDao(Pet.class, petDao);
        registerDao(Pet_Media.class, pet_MediaDao);
        registerDao(Pet_Contact.class, pet_ContactDao);
        registerDao(Pet_Breed.class, pet_BreedDao);
    }
    
    public void clear() {
        catalogueDaoConfig.clearIdentityScope();
        petDaoConfig.clearIdentityScope();
        pet_MediaDaoConfig.clearIdentityScope();
        pet_ContactDaoConfig.clearIdentityScope();
        pet_BreedDaoConfig.clearIdentityScope();
    }

    public CatalogueDao getCatalogueDao() {
        return catalogueDao;
    }

    public PetDao getPetDao() {
        return petDao;
    }

    public Pet_MediaDao getPet_MediaDao() {
        return pet_MediaDao;
    }

    public Pet_ContactDao getPet_ContactDao() {
        return pet_ContactDao;
    }

    public Pet_BreedDao getPet_BreedDao() {
        return pet_BreedDao;
    }

}
